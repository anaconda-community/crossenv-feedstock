From 2211a7a0650d0f7d1ecdb1654e084934c88106c6 Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Thu, 7 Oct 2021 08:56:39 +0200
Subject: [PATCH 2/3] HACK: Workaround
 https://github.com/conda-forge/pypy3.6-feedstock/issues/58

---
 crossenv/__init__.py | 44 ++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 40 insertions(+), 4 deletions(-)

diff --git a/crossenv/__init__.py b/crossenv/__init__.py
index fd34c9c..c7f1b74 100644
--- a/crossenv/__init__.py
+++ b/crossenv/__init__.py
@@ -23,6 +23,31 @@ __version__ = '1.0'
 
 logger = logging.getLogger(__name__)
 
+
+def HACK_symlink_or_copy(self, src, dst, relative_symlinks_ok=False):
+    """
+    Avoid bug in PyPy's venv: https://github.com/conda-forge/pypy3.6-feedstock/issues/58
+    """
+    force_copy = not self.symlinks
+    if not force_copy:
+        try:
+            if not os.path.islink(dst): # can't link to itself!
+                if relative_symlinks_ok:
+                    assert os.path.dirname(src) == os.path.dirname(dst)
+                    os.symlink(os.path.basename(src), dst)
+                else:
+                    os.symlink(src, dst)
+        except Exception:   # may need to use a more specific exception
+            logger.warning('Unable to symlink %r to %r', src, dst)
+            logger.warning('Ignoring error to work around https://github.com/conda-forge/pypy3.6-feedstock/issues/58')
+            # force_copy = True
+    if force_copy:
+        if os.path.isdir(src):
+            shutil.copytree(src, dst)
+        else:
+            shutil.copyfile(src, dst)
+
+
 class CrossEnvBuilder(venv.EnvBuilder):
     """
     A class to build a cross-compiling virtual environment useful for
@@ -309,7 +334,7 @@ class CrossEnvBuilder(venv.EnvBuilder):
             if self.host_relativize:
                 self.host_ar[0] = os.path.basename(self.host_ar[0])
 
-        self.host_version = self.host_sysconfigdata.build_time_vars.get('VERSION', 3.7)
+        self.host_version = self.host_sysconfigdata.build_time_vars.get('VERSION', "3.7")
         self.macosx_deployment_target = ''
         self.host_platform = sys.platform # Default: not actually cross compiling
 
@@ -500,8 +525,14 @@ class CrossEnvBuilder(venv.EnvBuilder):
         env = venv.EnvBuilder(
                 system_site_packages=self.build_system_site_packages,
                 clear=self.clear_build,
-                with_pip=self.with_build_pip)
-        env.create(context.build_env_dir)
+                with_pip=self.with_build_pip,
+                symlinks=True)
+        try:
+            symlink_or_copy = venv.EnvBuilder.symlink_or_copy
+            venv.EnvBuilder.symlink_or_copy = HACK_symlink_or_copy
+            env.create(context.build_env_dir)
+        finally:
+            venv.EnvBuilder.symlink_or_copy = symlink_or_copy
         context.build_bin_path = os.path.join(context.build_env_dir, 'bin')
         context.build_env_exe = os.path.join(
                 context.build_bin_path, context.python_exe)
@@ -577,7 +608,12 @@ class CrossEnvBuilder(venv.EnvBuilder):
                 symlinks=True,
                 upgrade=False,
                 with_pip=False)
-        env.create(context.cross_env_dir)
+        try:
+            symlink_or_copy = venv.EnvBuilder.symlink_or_copy
+            venv.EnvBuilder.symlink_or_copy = HACK_symlink_or_copy
+            env.create(context.cross_env_dir)
+        finally:
+            venv.EnvBuilder.symlink_or_copy = symlink_or_copy
         context.cross_bin_path = os.path.join(context.cross_env_dir, 'bin')
         context.cross_env_exe = os.path.join(
                 context.cross_bin_path, context.python_exe)
-- 
2.33.0

