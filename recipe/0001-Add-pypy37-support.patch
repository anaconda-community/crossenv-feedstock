From a94731525388d76f8de6258a1c91f67a7e7417c6 Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Thu, 7 Oct 2021 08:33:27 +0200
Subject: [PATCH 1/3] Add pypy37 support

---
 crossenv/__init__.py | 47 ++++++++++++++++++++++----------------------
 1 file changed, 23 insertions(+), 24 deletions(-)

diff --git a/crossenv/__init__.py b/crossenv/__init__.py
index 7da701e..fd34c9c 100644
--- a/crossenv/__init__.py
+++ b/crossenv/__init__.py
@@ -225,7 +225,7 @@ class CrossEnvBuilder(venv.EnvBuilder):
         :param host:    Path to the host Python executable.
         """
 
-        build_version = sysconfig.get_config_var('VERSION')
+        build_version = sysconfig.get_config_var('VERSION') or "3.7"
         host = os.path.abspath(host)
         if not os.path.exists(host):
             raise FileNotFoundError("%s does not exist" % host)
@@ -309,30 +309,29 @@ class CrossEnvBuilder(venv.EnvBuilder):
             if self.host_relativize:
                 self.host_ar[0] = os.path.basename(self.host_ar[0])
 
-        self.host_version = self.host_sysconfigdata.build_time_vars['VERSION']
-
-        # Ask the makefile a few questions too
-        if not os.path.exists(self.host_makefile):
-            raise FileNotFoundError("Cannot find Makefile")
-
+        self.host_version = self.host_sysconfigdata.build_time_vars.get('VERSION', 3.7)
+        self.macosx_deployment_target = ''
         self.host_platform = sys.platform # Default: not actually cross compiling
-        with open(self.host_makefile, 'r') as fp:
-            lines = list(fp.readlines())
 
-        for line in lines:
-            line = line.strip()
-            if line.startswith('_PYTHON_HOST_PLATFORM='):
-                host_platform = line.split('=',1)[-1]
-                if host_platform:
-                    self.host_platform = line.split('=',1)[-1]
-                break
-
-        self.macosx_deployment_target = ''
-        for line in lines:
-            line = line.strip()
-            if line.startswith('MACOSX_DEPLOYMENT_TARGET='):
-                self.macosx_deployment_target = line.split('=',1)[-1]
-                break
+        # Ask the makefile a few questions too
+        # It's expected to not exist for PyPy
+        if os.path.exists(self.host_makefile):
+            with open(self.host_makefile, 'r') as fp:
+                lines = list(fp.readlines())
+
+            for line in lines:
+                line = line.strip()
+                if line.startswith('_PYTHON_HOST_PLATFORM='):
+                    host_platform = line.split('=',1)[-1]
+                    if host_platform:
+                        self.host_platform = line.split('=',1)[-1]
+                    break
+
+            for line in lines:
+                line = line.strip()
+                if line.startswith('MACOSX_DEPLOYMENT_TARGET='):
+                    self.macosx_deployment_target = line.split('=',1)[-1]
+                    break
 
         # Sanity checks
         if self.host_version != build_version:
@@ -368,7 +367,7 @@ class CrossEnvBuilder(venv.EnvBuilder):
         # Sanity check that this is the right compiler. (See #24, #27.)
         found_triple = run_compiler('-dumpmachine').strip().strip()
         if found_triple:
-            expected = self.host_sysconfigdata.build_time_vars['HOST_GNU_TYPE']
+            expected = self.host_sysconfigdata.build_time_vars.get('HOST_GNU_TYPE', "aarch64-conda_cos7-linux-gnu")
             if not self._compare_triples(found_triple, expected):
                 logger.warning("The cross-compiler (%r) does not appear to be "
                                "for the correct architecture (got %s, expected "
-- 
2.33.0

